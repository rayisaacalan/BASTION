// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// BASTIONfit_cpp
Rcpp::List BASTIONfit_cpp(const Rcpp::IntegerMatrix& edges, const Rcpp::NumericVector& weights, const Rcpp::NumericVector& Y, const int MCMC_iter, const int BURNIN, const int THIN, const List init_values, const List hyperpars);
RcppExport SEXP _BASTION_BASTIONfit_cpp(SEXP edgesSEXP, SEXP weightsSEXP, SEXP YSEXP, SEXP MCMC_iterSEXP, SEXP BURNINSEXP, SEXP THINSEXP, SEXP init_valuesSEXP, SEXP hyperparsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::IntegerMatrix& >::type edges(edgesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const int >::type MCMC_iter(MCMC_iterSEXP);
    Rcpp::traits::input_parameter< const int >::type BURNIN(BURNINSEXP);
    Rcpp::traits::input_parameter< const int >::type THIN(THINSEXP);
    Rcpp::traits::input_parameter< const List >::type init_values(init_valuesSEXP);
    Rcpp::traits::input_parameter< const List >::type hyperpars(hyperparsSEXP);
    rcpp_result_gen = Rcpp::wrap(BASTIONfit_cpp(edges, weights, Y, MCMC_iter, BURNIN, THIN, init_values, hyperpars));
    return rcpp_result_gen;
END_RCPP
}
// fitBASTmodel
Rcpp::List fitBASTmodel(const Rcpp::IntegerMatrix& edges, const Rcpp::NumericVector& weights, const Rcpp::NumericVector& Y, const int MCMC_iter, const int BURNIN, const int THIN, const double init_sigmasq_y, const Rcpp::List init_mu_values, const Rcpp::List hyperpars);
RcppExport SEXP _BASTION_fitBASTmodel(SEXP edgesSEXP, SEXP weightsSEXP, SEXP YSEXP, SEXP MCMC_iterSEXP, SEXP BURNINSEXP, SEXP THINSEXP, SEXP init_sigmasq_ySEXP, SEXP init_mu_valuesSEXP, SEXP hyperparsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::IntegerMatrix& >::type edges(edgesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const int >::type MCMC_iter(MCMC_iterSEXP);
    Rcpp::traits::input_parameter< const int >::type BURNIN(BURNINSEXP);
    Rcpp::traits::input_parameter< const int >::type THIN(THINSEXP);
    Rcpp::traits::input_parameter< const double >::type init_sigmasq_y(init_sigmasq_ySEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type init_mu_values(init_mu_valuesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type hyperpars(hyperparsSEXP);
    rcpp_result_gen = Rcpp::wrap(fitBASTmodel(edges, weights, Y, MCMC_iter, BURNIN, THIN, init_sigmasq_y, init_mu_values, hyperpars));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BASTION_BASTIONfit_cpp", (DL_FUNC) &_BASTION_BASTIONfit_cpp, 8},
    {"_BASTION_fitBASTmodel", (DL_FUNC) &_BASTION_fitBASTmodel, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_BASTION(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
